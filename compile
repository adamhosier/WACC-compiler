#!/usr/bin/env python3
import sys
import os
from subprocess import Popen, call, PIPE, STDOUT

EXPECTED_ARGS = 1
SYNTAX_ERR_CODE = 100
SEMANTIC_ERR_CODE = 200

# check command usage
if len(sys.argv) != EXPECTED_ARGS + 1:
    print("Usage: compile [WACC-PROGRAM]")
    sys.exit()

# check file exists
path = sys.argv[1]
if not os.path.isfile(path):
    print("Fatal Error: file program not found at {0}".format(path))
    sys.exit()

# navigate to bin, and build path
path = os.path.abspath(path)
fname = os.path.splitext(os.path.basename(path))[0]

os.chdir("bin")


# open file as readable buffer
with open(path, 'rb') as f:
    # call main java class
    cmd = Popen(["java", "-classpath", "../lib/antlr-4.4-complete.jar:.", 
                 "Main", "run"], stdin=PIPE, stdout=PIPE, stderr=STDOUT);

    output, err = cmd.communicate(f.read())
    output = output.decode("utf-8")

    exit = cmd.returncode
    
    # error check
    if exit == SYNTAX_ERR_CODE:
        print("#syntax_error#")
        sys.exit(SYNTAX_ERR_CODE)
    elif exit == SEMANTIC_ERR_CODE:
        print("#semantic_error#")
        sys.exit(SEMANTIC_ERR_CODE)

# change back to working directory
os.chdir("../")
    
# write out to .s file
with open(fname + ".s", 'w') as f:
    f.write(output);

