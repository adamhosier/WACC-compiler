// Generated from ./WaccLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WaccLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMENT=1, WS=2, BEGIN=3, END=4, IS=5, SKIP=6, READ=7, FREE=8, RETURN=9, 
		EXIT=10, PRINT=11, PRINTLN=12, IF=13, THEN=14, ELSE=15, FI=16, FOR=17, 
		WHILE=18, DO=19, DONE=20, NEW_PAIR=21, CALL=22, FST=23, SND=24, INT=25, 
		BOOL=26, CHAR=27, STRING=28, PAIR=29, BOOL_LIT=30, TRUE=31, FALSE=32, 
		NOT=33, LEN=34, ORD=35, CHR=36, INC=37, DEC=38, MULT=39, DIV=40, MOD=41, 
		PLUS=42, MINUS=43, EQUALS=44, GREATER_THAN=45, GREATER_THAN_EQ=46, LESS_THAN=47, 
		LESS_THAN_EQ=48, EQ=49, NOT_EQ=50, AND=51, OR=52, OPEN_PARENTHESES=53, 
		CLOSE_PARENTHESES=54, OPEN_BRACKETS=55, CLOSE_BRACKETS=56, COMMA=57, SEMICOLON=58, 
		NULL=59, IDENT=60, INC_IDENT=61, DEC_IDENT=62, INT_LIT=63, DIGIT_LIT=64, 
		CHARACTER_LIT=65, ESCAPED_CHAR_LIT=66, CHAR_LIT=67, STRING_LIT=68;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='", "'>'", "'?'", "'@'", "'A'", "'B'", "'C'", "'D'"
	};
	public static final String[] ruleNames = {
		"COMMENT", "WS", "BEGIN", "END", "IS", "SKIP", "READ", "FREE", "RETURN", 
		"EXIT", "PRINT", "PRINTLN", "IF", "THEN", "ELSE", "FI", "FOR", "WHILE", 
		"DO", "DONE", "NEW_PAIR", "CALL", "FST", "SND", "INT", "BOOL", "CHAR", 
		"STRING", "PAIR", "BOOL_LIT", "TRUE", "FALSE", "NOT", "LEN", "ORD", "CHR", 
		"INC", "DEC", "MULT", "DIV", "MOD", "PLUS", "MINUS", "EQUALS", "GREATER_THAN", 
		"GREATER_THAN_EQ", "LESS_THAN", "LESS_THAN_EQ", "EQ", "NOT_EQ", "AND", 
		"OR", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", "OPEN_BRACKETS", "CLOSE_BRACKETS", 
		"COMMA", "SEMICOLON", "SINGLE_QUOTE", "DOUBLE_QUOTE", "NULL", "DIGIT", 
		"LOWERCASE", "UPPERCASE", "UNDERSCORE", "ESCAPED_CHAR", "CHARACTER", "IDENT", 
		"INC_IDENT", "DEC_IDENT", "INT_LIT", "DIGIT_LIT", "CHARACTER_LIT", "ESCAPED_CHAR_LIT", 
		"CHAR_LIT", "STRING_LIT"
	};


	public WaccLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WaccLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2F\u01dc\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\3\2\3\2\7\2\u009e\n\2\f\2\16\2\u00a1\13\2"+
		"\3\2\3\2\3\2\3\2\3\3\6\3\u00a8\n\3\r\3\16\3\u00a9\3\3\3\3\3\4\3\4\3\4"+
		"\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3"+
		"\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3"+
		"\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r"+
		"\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21"+
		"\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24"+
		"\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32"+
		"\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\5\37"+
		"\u0137\n\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3#\3#\3#\3#\3$\3"+
		"$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3"+
		",\3-\3-\3.\3.\3/\3/\3/\3\60\3\60\3\61\3\61\3\61\3\62\3\62\3\62\3\63\3"+
		"\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\3"+
		"9\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3>\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3"+
		"C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\3C\5C\u01a7\nC\3D\3D\5D\u01ab"+
		"\nD\3E\3E\3E\5E\u01b0\nE\3E\3E\3E\3E\7E\u01b6\nE\fE\16E\u01b9\13E\3F\3"+
		"F\3F\3G\3G\3G\3H\3H\5H\u01c3\nH\3H\6H\u01c6\nH\rH\16H\u01c7\3I\3I\3J\3"+
		"J\3K\3K\3L\3L\3L\3L\3M\3M\7M\u01d6\nM\fM\16M\u01d9\13M\3M\3M\2\2N\3\3"+
		"\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"+
		"!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!"+
		"A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s"+
		";u<w\2y\2{=}\2\177\2\u0081\2\u0083\2\u0085\2\u0087\2\u0089>\u008b?\u008d"+
		"@\u008fA\u0091B\u0093C\u0095D\u0097E\u0099F\3\2\5\4\2\f\f\17\17\5\2\13"+
		"\f\17\17\"\"\5\2$$))^^\u01e8\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2"+
		"\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i"+
		"\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2"+
		"\2\2\2{\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f"+
		"\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2"+
		"\2\2\u0099\3\2\2\2\3\u009b\3\2\2\2\5\u00a7\3\2\2\2\7\u00ad\3\2\2\2\t\u00b3"+
		"\3\2\2\2\13\u00b7\3\2\2\2\r\u00ba\3\2\2\2\17\u00bf\3\2\2\2\21\u00c4\3"+
		"\2\2\2\23\u00c9\3\2\2\2\25\u00d0\3\2\2\2\27\u00d5\3\2\2\2\31\u00db\3\2"+
		"\2\2\33\u00e3\3\2\2\2\35\u00e6\3\2\2\2\37\u00eb\3\2\2\2!\u00f0\3\2\2\2"+
		"#\u00f3\3\2\2\2%\u00f7\3\2\2\2\'\u00fd\3\2\2\2)\u0100\3\2\2\2+\u0105\3"+
		"\2\2\2-\u010d\3\2\2\2/\u0112\3\2\2\2\61\u0116\3\2\2\2\63\u011a\3\2\2\2"+
		"\65\u011e\3\2\2\2\67\u0123\3\2\2\29\u0128\3\2\2\2;\u012f\3\2\2\2=\u0136"+
		"\3\2\2\2?\u0138\3\2\2\2A\u013d\3\2\2\2C\u0143\3\2\2\2E\u0145\3\2\2\2G"+
		"\u0149\3\2\2\2I\u014d\3\2\2\2K\u0151\3\2\2\2M\u0154\3\2\2\2O\u0157\3\2"+
		"\2\2Q\u0159\3\2\2\2S\u015b\3\2\2\2U\u015d\3\2\2\2W\u015f\3\2\2\2Y\u0161"+
		"\3\2\2\2[\u0163\3\2\2\2]\u0165\3\2\2\2_\u0168\3\2\2\2a\u016a\3\2\2\2c"+
		"\u016d\3\2\2\2e\u0170\3\2\2\2g\u0173\3\2\2\2i\u0176\3\2\2\2k\u0179\3\2"+
		"\2\2m\u017b\3\2\2\2o\u017d\3\2\2\2q\u017f\3\2\2\2s\u0181\3\2\2\2u\u0183"+
		"\3\2\2\2w\u0185\3\2\2\2y\u0187\3\2\2\2{\u0189\3\2\2\2}\u018e\3\2\2\2\177"+
		"\u0190\3\2\2\2\u0081\u0192\3\2\2\2\u0083\u0194\3\2\2\2\u0085\u01a6\3\2"+
		"\2\2\u0087\u01aa\3\2\2\2\u0089\u01af\3\2\2\2\u008b\u01ba\3\2\2\2\u008d"+
		"\u01bd\3\2\2\2\u008f\u01c2\3\2\2\2\u0091\u01c9\3\2\2\2\u0093\u01cb\3\2"+
		"\2\2\u0095\u01cd\3\2\2\2\u0097\u01cf\3\2\2\2\u0099\u01d3\3\2\2\2\u009b"+
		"\u009f\7%\2\2\u009c\u009e\n\2\2\2\u009d\u009c\3\2\2\2\u009e\u00a1\3\2"+
		"\2\2\u009f\u009d\3\2\2\2\u009f\u00a0\3\2\2\2\u00a0\u00a2\3\2\2\2\u00a1"+
		"\u009f\3\2\2\2\u00a2\u00a3\t\2\2\2\u00a3\u00a4\3\2\2\2\u00a4\u00a5\b\2"+
		"\2\2\u00a5\4\3\2\2\2\u00a6\u00a8\t\3\2\2\u00a7\u00a6\3\2\2\2\u00a8\u00a9"+
		"\3\2\2\2\u00a9\u00a7\3\2\2\2\u00a9\u00aa\3\2\2\2\u00aa\u00ab\3\2\2\2\u00ab"+
		"\u00ac\b\3\3\2\u00ac\6\3\2\2\2\u00ad\u00ae\7d\2\2\u00ae\u00af\7g\2\2\u00af"+
		"\u00b0\7i\2\2\u00b0\u00b1\7k\2\2\u00b1\u00b2\7p\2\2\u00b2\b\3\2\2\2\u00b3"+
		"\u00b4\7g\2\2\u00b4\u00b5\7p\2\2\u00b5\u00b6\7f\2\2\u00b6\n\3\2\2\2\u00b7"+
		"\u00b8\7k\2\2\u00b8\u00b9\7u\2\2\u00b9\f\3\2\2\2\u00ba\u00bb\7u\2\2\u00bb"+
		"\u00bc\7m\2\2\u00bc\u00bd\7k\2\2\u00bd\u00be\7r\2\2\u00be\16\3\2\2\2\u00bf"+
		"\u00c0\7t\2\2\u00c0\u00c1\7g\2\2\u00c1\u00c2\7c\2\2\u00c2\u00c3\7f\2\2"+
		"\u00c3\20\3\2\2\2\u00c4\u00c5\7h\2\2\u00c5\u00c6\7t\2\2\u00c6\u00c7\7"+
		"g\2\2\u00c7\u00c8\7g\2\2\u00c8\22\3\2\2\2\u00c9\u00ca\7t\2\2\u00ca\u00cb"+
		"\7g\2\2\u00cb\u00cc\7v\2\2\u00cc\u00cd\7w\2\2\u00cd\u00ce\7t\2\2\u00ce"+
		"\u00cf\7p\2\2\u00cf\24\3\2\2\2\u00d0\u00d1\7g\2\2\u00d1\u00d2\7z\2\2\u00d2"+
		"\u00d3\7k\2\2\u00d3\u00d4\7v\2\2\u00d4\26\3\2\2\2\u00d5\u00d6\7r\2\2\u00d6"+
		"\u00d7\7t\2\2\u00d7\u00d8\7k\2\2\u00d8\u00d9\7p\2\2\u00d9\u00da\7v\2\2"+
		"\u00da\30\3\2\2\2\u00db\u00dc\7r\2\2\u00dc\u00dd\7t\2\2\u00dd\u00de\7"+
		"k\2\2\u00de\u00df\7p\2\2\u00df\u00e0\7v\2\2\u00e0\u00e1\7n\2\2\u00e1\u00e2"+
		"\7p\2\2\u00e2\32\3\2\2\2\u00e3\u00e4\7k\2\2\u00e4\u00e5\7h\2\2\u00e5\34"+
		"\3\2\2\2\u00e6\u00e7\7v\2\2\u00e7\u00e8\7j\2\2\u00e8\u00e9\7g\2\2\u00e9"+
		"\u00ea\7p\2\2\u00ea\36\3\2\2\2\u00eb\u00ec\7g\2\2\u00ec\u00ed\7n\2\2\u00ed"+
		"\u00ee\7u\2\2\u00ee\u00ef\7g\2\2\u00ef \3\2\2\2\u00f0\u00f1\7h\2\2\u00f1"+
		"\u00f2\7k\2\2\u00f2\"\3\2\2\2\u00f3\u00f4\7h\2\2\u00f4\u00f5\7q\2\2\u00f5"+
		"\u00f6\7t\2\2\u00f6$\3\2\2\2\u00f7\u00f8\7y\2\2\u00f8\u00f9\7j\2\2\u00f9"+
		"\u00fa\7k\2\2\u00fa\u00fb\7n\2\2\u00fb\u00fc\7g\2\2\u00fc&\3\2\2\2\u00fd"+
		"\u00fe\7f\2\2\u00fe\u00ff\7q\2\2\u00ff(\3\2\2\2\u0100\u0101\7f\2\2\u0101"+
		"\u0102\7q\2\2\u0102\u0103\7p\2\2\u0103\u0104\7g\2\2\u0104*\3\2\2\2\u0105"+
		"\u0106\7p\2\2\u0106\u0107\7g\2\2\u0107\u0108\7y\2\2\u0108\u0109\7r\2\2"+
		"\u0109\u010a\7c\2\2\u010a\u010b\7k\2\2\u010b\u010c\7t\2\2\u010c,\3\2\2"+
		"\2\u010d\u010e\7e\2\2\u010e\u010f\7c\2\2\u010f\u0110\7n\2\2\u0110\u0111"+
		"\7n\2\2\u0111.\3\2\2\2\u0112\u0113\7h\2\2\u0113\u0114\7u\2\2\u0114\u0115"+
		"\7v\2\2\u0115\60\3\2\2\2\u0116\u0117\7u\2\2\u0117\u0118\7p\2\2\u0118\u0119"+
		"\7f\2\2\u0119\62\3\2\2\2\u011a\u011b\7k\2\2\u011b\u011c\7p\2\2\u011c\u011d"+
		"\7v\2\2\u011d\64\3\2\2\2\u011e\u011f\7d\2\2\u011f\u0120\7q\2\2\u0120\u0121"+
		"\7q\2\2\u0121\u0122\7n\2\2\u0122\66\3\2\2\2\u0123\u0124\7e\2\2\u0124\u0125"+
		"\7j\2\2\u0125\u0126\7c\2\2\u0126\u0127\7t\2\2\u01278\3\2\2\2\u0128\u0129"+
		"\7u\2\2\u0129\u012a\7v\2\2\u012a\u012b\7t\2\2\u012b\u012c\7k\2\2\u012c"+
		"\u012d\7p\2\2\u012d\u012e\7i\2\2\u012e:\3\2\2\2\u012f\u0130\7r\2\2\u0130"+
		"\u0131\7c\2\2\u0131\u0132\7k\2\2\u0132\u0133\7t\2\2\u0133<\3\2\2\2\u0134"+
		"\u0137\5? \2\u0135\u0137\5A!\2\u0136\u0134\3\2\2\2\u0136\u0135\3\2\2\2"+
		"\u0137>\3\2\2\2\u0138\u0139\7v\2\2\u0139\u013a\7t\2\2\u013a\u013b\7w\2"+
		"\2\u013b\u013c\7g\2\2\u013c@\3\2\2\2\u013d\u013e\7h\2\2\u013e\u013f\7"+
		"c\2\2\u013f\u0140\7n\2\2\u0140\u0141\7u\2\2\u0141\u0142\7g\2\2\u0142B"+
		"\3\2\2\2\u0143\u0144\7#\2\2\u0144D\3\2\2\2\u0145\u0146\7n\2\2\u0146\u0147"+
		"\7g\2\2\u0147\u0148\7p\2\2\u0148F\3\2\2\2\u0149\u014a\7q\2\2\u014a\u014b"+
		"\7t\2\2\u014b\u014c\7f\2\2\u014cH\3\2\2\2\u014d\u014e\7e\2\2\u014e\u014f"+
		"\7j\2\2\u014f\u0150\7t\2\2\u0150J\3\2\2\2\u0151\u0152\7-\2\2\u0152\u0153"+
		"\7-\2\2\u0153L\3\2\2\2\u0154\u0155\7/\2\2\u0155\u0156\7/\2\2\u0156N\3"+
		"\2\2\2\u0157\u0158\7,\2\2\u0158P\3\2\2\2\u0159\u015a\7\61\2\2\u015aR\3"+
		"\2\2\2\u015b\u015c\7\'\2\2\u015cT\3\2\2\2\u015d\u015e\7-\2\2\u015eV\3"+
		"\2\2\2\u015f\u0160\7/\2\2\u0160X\3\2\2\2\u0161\u0162\7?\2\2\u0162Z\3\2"+
		"\2\2\u0163\u0164\7@\2\2\u0164\\\3\2\2\2\u0165\u0166\7@\2\2\u0166\u0167"+
		"\7?\2\2\u0167^\3\2\2\2\u0168\u0169\7>\2\2\u0169`\3\2\2\2\u016a\u016b\7"+
		">\2\2\u016b\u016c\7?\2\2\u016cb\3\2\2\2\u016d\u016e\7?\2\2\u016e\u016f"+
		"\7?\2\2\u016fd\3\2\2\2\u0170\u0171\7#\2\2\u0171\u0172\7?\2\2\u0172f\3"+
		"\2\2\2\u0173\u0174\7(\2\2\u0174\u0175\7(\2\2\u0175h\3\2\2\2\u0176\u0177"+
		"\7~\2\2\u0177\u0178\7~\2\2\u0178j\3\2\2\2\u0179\u017a\7*\2\2\u017al\3"+
		"\2\2\2\u017b\u017c\7+\2\2\u017cn\3\2\2\2\u017d\u017e\7]\2\2\u017ep\3\2"+
		"\2\2\u017f\u0180\7_\2\2\u0180r\3\2\2\2\u0181\u0182\7.\2\2\u0182t\3\2\2"+
		"\2\u0183\u0184\7=\2\2\u0184v\3\2\2\2\u0185\u0186\7)\2\2\u0186x\3\2\2\2"+
		"\u0187\u0188\7$\2\2\u0188z\3\2\2\2\u0189\u018a\7p\2\2\u018a\u018b\7w\2"+
		"\2\u018b\u018c\7n\2\2\u018c\u018d\7n\2\2\u018d|\3\2\2\2\u018e\u018f\4"+
		"\62;\2\u018f~\3\2\2\2\u0190\u0191\4c|\2\u0191\u0080\3\2\2\2\u0192\u0193"+
		"\4C\\\2\u0193\u0082\3\2\2\2\u0194\u0195\7a\2\2\u0195\u0084\3\2\2\2\u0196"+
		"\u0197\7^\2\2\u0197\u01a7\7\62\2\2\u0198\u0199\7^\2\2\u0199\u01a7\7d\2"+
		"\2\u019a\u019b\7^\2\2\u019b\u01a7\7p\2\2\u019c\u019d\7^\2\2\u019d\u01a7"+
		"\7h\2\2\u019e\u019f\7^\2\2\u019f\u01a7\7t\2\2\u01a0\u01a1\7^\2\2\u01a1"+
		"\u01a7\5y=\2\u01a2\u01a3\7^\2\2\u01a3\u01a7\5w<\2\u01a4\u01a5\7^\2\2\u01a5"+
		"\u01a7\7^\2\2\u01a6\u0196\3\2\2\2\u01a6\u0198\3\2\2\2\u01a6\u019a\3\2"+
		"\2\2\u01a6\u019c\3\2\2\2\u01a6\u019e\3\2\2\2\u01a6\u01a0\3\2\2\2\u01a6"+
		"\u01a2\3\2\2\2\u01a6\u01a4\3\2\2\2\u01a7\u0086\3\2\2\2\u01a8\u01ab\n\4"+
		"\2\2\u01a9\u01ab\5\u0085C\2\u01aa\u01a8\3\2\2\2\u01aa\u01a9\3\2\2\2\u01ab"+
		"\u0088\3\2\2\2\u01ac\u01b0\5\u0083B\2\u01ad\u01b0\5\177@\2\u01ae\u01b0"+
		"\5\u0081A\2\u01af\u01ac\3\2\2\2\u01af\u01ad\3\2\2\2\u01af\u01ae\3\2\2"+
		"\2\u01b0\u01b7\3\2\2\2\u01b1\u01b6\5\u0083B\2\u01b2\u01b6\5\177@\2\u01b3"+
		"\u01b6\5\u0081A\2\u01b4\u01b6\5}?\2\u01b5\u01b1\3\2\2\2\u01b5\u01b2\3"+
		"\2\2\2\u01b5\u01b3\3\2\2\2\u01b5\u01b4\3\2\2\2\u01b6\u01b9\3\2\2\2\u01b7"+
		"\u01b5\3\2\2\2\u01b7\u01b8\3\2\2\2\u01b8\u008a\3\2\2\2\u01b9\u01b7\3\2"+
		"\2\2\u01ba\u01bb\5\u0089E\2\u01bb\u01bc\5K&\2\u01bc\u008c\3\2\2\2\u01bd"+
		"\u01be\5\u0089E\2\u01be\u01bf\5M\'\2\u01bf\u008e\3\2\2\2\u01c0\u01c3\5"+
		"U+\2\u01c1\u01c3\5W,\2\u01c2\u01c0\3\2\2\2\u01c2\u01c1\3\2\2\2\u01c2\u01c3"+
		"\3\2\2\2\u01c3\u01c5\3\2\2\2\u01c4\u01c6\5}?\2\u01c5\u01c4\3\2\2\2\u01c6"+
		"\u01c7\3\2\2\2\u01c7\u01c5\3\2\2\2\u01c7\u01c8\3\2\2\2\u01c8\u0090\3\2"+
		"\2\2\u01c9\u01ca\5}?\2\u01ca\u0092\3\2\2\2\u01cb\u01cc\5\u0087D\2\u01cc"+
		"\u0094\3\2\2\2\u01cd\u01ce\5\u0085C\2\u01ce\u0096\3\2\2\2\u01cf\u01d0"+
		"\5w<\2\u01d0\u01d1\5\u0087D\2\u01d1\u01d2\5w<\2\u01d2\u0098\3\2\2\2\u01d3"+
		"\u01d7\5y=\2\u01d4\u01d6\5\u0087D\2\u01d5\u01d4\3\2\2\2\u01d6\u01d9\3"+
		"\2\2\2\u01d7\u01d5\3\2\2\2\u01d7\u01d8\3\2\2\2\u01d8\u01da\3\2\2\2\u01d9"+
		"\u01d7\3\2\2\2\u01da\u01db\5y=\2\u01db\u009a\3\2\2\2\16\2\u009f\u00a9"+
		"\u0136\u01a6\u01aa\u01af\u01b5\u01b7\u01c2\u01c7\u01d7\4\b\2\2\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}